@name couch dash
@inputs TurningPlate:wirelink G1 G2 G3 G4 G5 G6 G7 G8 A D Active
@persist T Material:string Color:vector E:entity Size Steeringwheelsize GlassMaterial:string Wheel
@persist E1:entity E2:entity E3:entity E4:entity E5:entity E6:entity E7:entity E8:entity Steeringwheelent:entity E2001:entity
@outputs T
@trigger none

interval(100)
runOnChat(1)
if(dupefinished()){reset()}
if(first()|duped()){
    T=0
    E=entity():isWeldedTo()
    Size=1
    Steeringwheelsize = 2
    Material="models/props_combine/metal_combinebridge001"
    GlassMaterial="models/dog/eyeglass"
    Color=vec(180,40,40)
}

LastSaid=owner():lastSaid():explode(" ")
if(chatClk(owner())&LastSaid[1,string]=="!reset")
        {reset()}

MaxAngle = 100  #Increase/decrease how much it can turn
TurnSpeed = 15  #Higher makes it less smooth, lower is slower

G1Max=100
G2Max=100
G3Max=6000
G4Max=1000
G5Max=5000
G6Max=100
G7Max=1000
G8Max=1



#Material="models/props_canal/metalwall005b"
#T=T+1
#if(T<36){interval(100)}
if(T<36){T=T+1}
#if (T==36){interval(100000000)}
Pos=E:pos()
Ang=E:angles()
Size=1

if(changed(Active)){
if(Active){DashLights=1}
else{DashLights=0}
holoDisableShading(23,DashLights)
holoDisableShading(24,DashLights)
holoDisableShading(25,DashLights)

holoDisableShading(11,DashLights)
holoDisableShading(12,DashLights)
holoDisableShading(13,DashLights)

holoDisableShading(17,DashLights)
holoDisableShading(18,DashLights)
holoDisableShading(19,DashLights)

holoDisableShading(29,DashLights)
holoDisableShading(30,DashLights)
holoDisableShading(31,DashLights)

holoDisableShading(35,DashLights)
holoDisableShading(36,DashLights)
holoDisableShading(37,DashLights)

holoDisableShading(47,DashLights)
holoDisableShading(48,DashLights)
holoDisableShading(49,DashLights)

holoDisableShading(53,DashLights)
holoDisableShading(54,DashLights)
holoDisableShading(55,DashLights)

holoDisableShading(41,DashLights)
holoDisableShading(42,DashLights)
holoDisableShading(43,DashLights)
}

holoAng(26,E1:toWorld(ang(0,50+((G1/G1Max)*-280),0)))  
holoAng(20,E2:toWorld(ang(0,50+((G2/G2Max)*-280),0)))  
holoAng(14,E3:toWorld(ang(0,50+((G3/G3Max)*-280),0)))  
holoAng(32,E4:toWorld(ang(0,50+((G4/G4Max)*-280),0)))
holoAng(38,E5:toWorld(ang(0,50+((G5/G5Max)*-280),0))) 
holoAng(50,E6:toWorld(ang(0,50+((G6/G6Max)*-280),0))) 
holoAng(56,E7:toWorld(ang(0,50+((G7/G7Max)*-280),0)))
holoAng(44,E8:toWorld(ang(0,50+((G8/G8Max)*-280),0)))



#if(A){if(Wheel<MaxAngle){Wheel += (A*TurnSpeed)}}
#elseif(D){if(Wheel>-MaxAngle){Wheel += (D*-TurnSpeed)}}
#else{if(Wheel>0){Wheel += -TurnSpeed}elseif(Wheel<0){Wheel += TurnSpeed}}
#holoAng(65,Steeringwheelent:toWorld(ang(0,Wheel*280,0)))


MechanicalTurning=((E2001:toLocal(TurningPlate:entity():angles())):yaw())
holoAng(65,Steeringwheelent:toWorld(ang(0,MechanicalTurning*8,0)))


if(T==5){


holoCreate(200,E:toWorld(E:toLocal(Pos)))
holoAlpha(200,0)
holoAng(200,TurningPlate:entity():angles())
holoParent(200,E)
E2001=holoEntity(200)





#if(holoCanCreate()){
#dash
holoCreate(1,E:toWorld(E:toLocal(Pos)+vec(-7,0,7)*Size),vec(1.5,3,2)*Size)
holoModel(1,"hq_rcylinder")
holoMaterial(1,Material)
holoColor(1,Color)
holoAng(1,E:toWorld(E:toLocal(Ang)+ang(-5,0,0)))
holoParent(1,E)
E2=holoEntity(1) 
#}

#Ztop two gauges
#right
#if(holoCanCreate()){
holoCreate(2,E:toWorld(E:toLocal(Pos)+vec(-12,-6,5)*Size),vec(1,1,3)*Size)
holoModel(2,"hq_rcylinder")
holoMaterial(2,Material)
holoColor(2,Color)
holoAng(2,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(2,E)
#}

#if(holoCanCreate()){
holoCreate(16,E:toWorld(E:toLocal(Pos)+vec(-15,-6,22)*Size),vec(0.8,0.8,0.25)*Size)
holoModel(16,"hq_tube_thin")
holoMaterial(16,Material)
holoColor(16,Color)
holoAng(16,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(16,E)
#}

#if(holoCanCreate()){
holoCreate(17,E:toWorld(E:toLocal(Pos)+vec(-15.12,-6,23)*Size),vec(0.75,0.75,0.3)*Size)
holoModel(17,"hq_dome")
holoMaterial(17,GlassMaterial)
holoColor(17,Color)
holoAlpha(17,100)
holoAng(17,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(17,E)
#}

#if(holoCanCreate()){
holoCreate(18,E:toWorld(E:toLocal(Pos)+vec(-12.12,-6,5)*Size),vec(0.75,0.75,3)*Size)
holoModel(18,"hq_cylinder")
holoMaterial(18,"bull/various/speedometer")
holoColor(18,Color)
holoAng(18,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(18,E)
#}

#if(holoCanCreate()){
holoCreate(19,E:toWorld(E:toLocal(Pos)+vec(-12.12,-6,5)*Size),vec(0.75,0.75,3.1)*Size)
holoModel(19,"hq_cylinder")
holoMaterial(19,"models/props_canal/canal_bridge_railing_01b")
#holoColor(19,vec(50,120,120))
holoAlpha(19,150)
holoAng(19,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(19,E)
E2=holoEntity(18) 
#}

#Rotate this holo and parent the prisim below to this holo
#}if(holoCanCreate()){
holoCreate(20,E:toWorld(E:toLocal(Pos)+vec(-12.12,-6,5)*Size),vec(0.1,0.1,3.15)*Size)
holoModel(20,"hq_cylinder")
holoMaterial(20,"models/props_canal/canal_bridge_railing_01b")
holoColor(20,vec(120,120,120))
#holoAlpha(20,150)
holoAng(20,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(20,E)
E12=holoEntity(20) 
#}

#if(holoCanCreate()){
holoCreate(21,E:toWorld(E:toLocal(Pos)+vec(-12.12,-7,5)*Size),vec(0.05,3.15,0.5)*Size)
holoModel(21,"prism")
holoMaterial(21,"models/props_canal/canal_bridge_railing_01b")
holoColor(21,vec(120,120,120))
#holoAlpha(21,150)
holoAng(21,E:toWorld(E:toLocal(Ang)+ang(-10,0,90)))
holoParent(21,E12)
#}

#left
#if(holoCanCreate()){
holoCreate(3,E:toWorld(E:toLocal(Pos)+vec(-12,6,5)*Size),vec(1,1,3)*Size)
holoModel(3,"hq_rcylinder")
holoMaterial(3,Material)
holoColor(3,Color)
holoAng(3,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(3,E)
#}

#if(holoCanCreate()){
holoCreate(10,E:toWorld(E:toLocal(Pos)+vec(-15,6,22)*Size),vec(0.8,0.8,0.25)*Size)
holoModel(10,"hq_tube_thin")
holoMaterial(10,Material)
holoColor(10,Color)
holoAng(10,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(10,E)
#} 

#if(holoCanCreate()){
holoCreate(11,E:toWorld(E:toLocal(Pos)+vec(-15.12,6,23)*Size),vec(0.75,0.75,0.3)*Size)
holoModel(11,"hq_dome")
holoMaterial(11,GlassMaterial)
holoColor(11,Color)
holoAlpha(11,100)
holoAng(11,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(11,E)
#}

#if(holoCanCreate()){
holoCreate(12,E:toWorld(E:toLocal(Pos)+vec(-12.12,6,5)*Size),vec(0.75,0.75,3)*Size)
holoModel(12,"hq_cylinder")
holoMaterial(12,"bull/various/speedometer")
holoColor(12,Color)
holoAng(12,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(12,E)
#}

#if(holoCanCreate()){
holoCreate(13,E:toWorld(E:toLocal(Pos)+vec(-12.12,6,5)*Size),vec(0.75,0.75,3.1)*Size)
holoModel(13,"hq_cylinder")
holoMaterial(13,"models/props_canal/canal_bridge_railing_01b")
#holoColor(13,vec(50,120,120))
holoAlpha(13,150)
holoAng(13,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(13,E)
E3=holoEntity(13) 
#}

#Rotate this holo and parent the prisim below to this holo
#if(holoCanCreate()){
holoCreate(14,E:toWorld(E:toLocal(Pos)+vec(-12.12,6,5)*Size),vec(0.1,0.1,3.15)*Size)
holoModel(14,"hq_cylinder")
holoMaterial(14,"models/props_canal/canal_bridge_railing_01b")
holoColor(14,vec(120,120,120))
#holoAlpha(14,150)
holoAng(14,E:toWorld(E:toLocal(Ang)+ang(-10,0,0)))
holoParent(14,E)
E13=holoEntity(14) 
#}

#if(holoCanCreate()){
holoCreate(15,E:toWorld(E:toLocal(Pos)+vec(-12.12,5,5)*Size),vec(0.05,3.15,0.5)*Size)
holoModel(15,"prism")
holoMaterial(15,"models/props_canal/canal_bridge_railing_01b")
holoColor(15,vec(120,120,120))
#holoAlpha(15,150)
holoAng(15,E:toWorld(E:toLocal(Ang)+ang(-10,0,90)))
holoParent(15,E13)
#}

#top side gauges
#left
#if(holoCanCreate()){
holoCreate(4,E:toWorld(E:toLocal(Pos)+vec(-11,-15,5)*Size),vec(0.5,0.5,3)*Size)
holoModel(4,"hq_rcylinder")
holoMaterial(4,Material)
holoColor(4,Color)
holoAng(4,E:toWorld(E:toLocal(Ang)+ang(-12,0,5)))
holoParent(4,E)
#} 

#if(holoCanCreate()){
holoCreate(22,E:toWorld(E:toLocal(Pos)+vec(-11,-15,5)*Size),vec(0.4,0.4,3.1)*Size)
holoModel(22,"hq_tube_thin")
holoMaterial(22,Material)
holoColor(22,Color)
holoAng(22,E:toWorld(E:toLocal(Ang)+ang(-12,0,5)))
holoParent(22,E)
#}

#if(holoCanCreate()){
holoCreate(23,E:toWorld(E:toLocal(Pos)+vec(-11,-15,5)*Size),vec(0.4,0.4,3.05)*Size)
holoModel(23,"hq_rcylinder_thin")
holoMaterial(23,"bull/various/speedometer")
holoColor(23,Color)
holoAng(23,E:toWorld(E:toLocal(Ang)+ang(-12,0,5)))
holoParent(23,E)
#}

#if(holoCanCreate()){
holoCreate(24,E:toWorld(E:toLocal(Pos)+vec(-11,-15,5)*Size),vec(0.4,0.4,3.07)*Size)
holoModel(24,"hq_rcylinder_thin")
holoMaterial(24,"models/props_canal/canal_bridge_railing_01b")
#holoColor(24,Color)
holoAlpha(24,150)
holoAng(24,E:toWorld(E:toLocal(Ang)+ang(-12,0,5)))
holoParent(24,E)
E1=holoEntity(24)
#}

#if(holoCanCreate()){
holoCreate(25,E:toWorld(E:toLocal(Pos)+vec(-14.815,-16.65,22.85)*Size),vec(0.37,0.37,0.15)*Size)
holoModel(25,"hq_dome")
holoMaterial(25,GlassMaterial)
holoColor(25,Color)
holoAlpha(25,100)
holoAng(25,E:toWorld(E:toLocal(Ang)+ang(-12,0,5)))
holoParent(25,E)
#}

#Rotate this holo and parent the prisim below to this holo
#if(holoCanCreate()){
holoCreate(26,E:toWorld(E:toLocal(Pos)+vec(-11,-15,5)*Size),vec(0.05,0.05,3.15)*Size)
holoModel(26,"hq_cylinder")
holoMaterial(26,"models/props_canal/canal_bridge_railing_01b")
holoColor(26,vec(120,120,120))
#holoAlpha(26,150)
holoAng(26,E:toWorld(E:toLocal(Ang)+ang(-12,0,5)))
holoParent(26,E)
E11=holoEntity(26) 
#}

#if(holoCanCreate()){
holoCreate(27,E:toWorld(E:toLocal(Pos)+vec(-11,-15.5,5)*Size),vec(0.025,3.15,0.25)*Size)
holoModel(27,"prism")
holoMaterial(27,"models/props_canal/canal_bridge_railing_01b")
holoColor(27,vec(120,120,120))
#holoAlpha(27,150)
holoAng(27,E:toWorld(E:toLocal(Ang)+ang(-12,0,95)))
holoParent(27,E11)
#} 

#right
#if(holoCanCreate()){
holoCreate(5,E:toWorld(E:toLocal(Pos)+vec(-11,15,5)*Size),vec(0.5,0.5,3)*Size)
holoModel(5,"hq_rcylinder")
holoMaterial(5,Material)
holoColor(5,Color)
holoAng(5,E:toWorld(E:toLocal(Ang)+ang(-12,0,-5)))
holoParent(5,E)
#}

#if(holoCanCreate()){
holoCreate(28,E:toWorld(E:toLocal(Pos)+vec(-11,15,5)*Size),vec(0.4,0.4,3.1)*Size)
holoModel(28,"hq_tube_thin")
holoMaterial(28,Material)
holoColor(28,Color)
holoAng(28,E:toWorld(E:toLocal(Ang)+ang(-12,0,-5)))
holoParent(28,E)
#}

#if(holoCanCreate()){
holoCreate(29,E:toWorld(E:toLocal(Pos)+vec(-11,15,5)*Size),vec(0.4,0.4,3.05)*Size)
holoModel(29,"hq_rcylinder_thin")
holoMaterial(29,"bull/various/speedometer")
holoColor(29,Color)
holoAng(29,E:toWorld(E:toLocal(Ang)+ang(-12,0,-5)))
holoParent(29,E)
#}

#if(holoCanCreate()){
holoCreate(30,E:toWorld(E:toLocal(Pos)+vec(-11,15,5)*Size),vec(0.4,0.4,3.07)*Size)
holoModel(30,"hq_rcylinder_thin")
holoMaterial(30,"models/props_canal/canal_bridge_railing_01b")
#holoColor(30,Color)
holoAlpha(30,150)
holoAng(30,E:toWorld(E:toLocal(Ang)+ang(-12,0,-5)))
holoParent(30,E)
E4=holoEntity(30) 
#}

#if(holoCanCreate()){
holoCreate(31,E:toWorld(E:toLocal(Pos)+vec(-14.815,16.65,22.85)*Size),vec(0.37,0.37,0.15)*Size)
holoModel(31,"hq_dome")
holoMaterial(31,GlassMaterial)
holoColor(31,Color)
holoAlpha(31,100)
holoAng(31,E:toWorld(E:toLocal(Ang)+ang(-12,0,-5)))
holoParent(31,E)
#}

#Rotate this holo and parent the prisim below to this holo
#if(holoCanCreate()){
holoCreate(32,E:toWorld(E:toLocal(Pos)+vec(-11,15,5)*Size),vec(0.05,0.05,3.15)*Size)
holoModel(32,"hq_cylinder")
holoMaterial(32,"models/props_canal/canal_bridge_railing_01b")
holoColor(32,vec(120,120,120))
#holoAlpha(32,150)
holoAng(32,E:toWorld(E:toLocal(Ang)+ang(-12,0,-5)))
holoParent(32,E)
E14=holoEntity(32) 
#}

#if(holoCanCreate()){
holoCreate(33,E:toWorld(E:toLocal(Pos)+vec(-11,14.5,5)*Size),vec(0.025,3.15,0.25)*Size)
holoModel(33,"prism")
holoMaterial(33,"models/props_canal/canal_bridge_railing_01b")
holoColor(33,vec(120,120,120))
#holoAlpha(33,150)
holoAng(33,E:toWorld(E:toLocal(Ang)+ang(-12,0,85)))
holoParent(33,E14)
#}

}
if(T==10){

#Bottom outside gauges
#left
#if(holoCanCreate()){
holoCreate(6,E:toWorld(E:toLocal(Pos)+vec(-3,-15,5)*Size),vec(0.5,0.5,3)*Size)
holoModel(6,"hq_rcylinder")
holoMaterial(6,Material)
holoColor(6,Color)
holoAng(6,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(6,E)
#}

#if(holoCanCreate()){
holoCreate(34,E:toWorld(E:toLocal(Pos)+vec(-3,-15,5)*Size),vec(0.4,0.4,3.1)*Size)
holoModel(34,"hq_tube_thin")
holoMaterial(34,Material)
holoColor(34,Color)
holoAng(34,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(34,E)
#}

#if(holoCanCreate()){
holoCreate(35,E:toWorld(E:toLocal(Pos)+vec(-3,-15,5)*Size),vec(0.4,0.4,3.05)*Size)
holoModel(35,"hq_rcylinder_thin")
holoMaterial(35,"bull/various/speedometer")
holoColor(35,Color)
holoAng(35,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(35,E)
#}

#if(holoCanCreate()){
holoCreate(36,E:toWorld(E:toLocal(Pos)+vec(-3,-15,5)*Size),vec(0.4,0.4,3.07)*Size)
holoModel(36,"hq_rcylinder_thin")
holoMaterial(36,"models/props_canal/canal_bridge_railing_01b")
#holoColor(36,Color)
holoAlpha(36,150)
holoAng(36,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(36,E)
E5=holoEntity(36)
#}

#if(holoCanCreate()){
holoCreate(37,E:toWorld(E:toLocal(Pos)+vec(-6.915,-15,22.85)*Size),vec(0.37,0.37,0.15)*Size)
holoModel(37,"hq_dome")
holoMaterial(37,GlassMaterial)
holoColor(37,Color)
holoAlpha(37,100)
holoAng(37,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(37,E)
#} 

#if(holoCanCreate()){
holoCreate(38,E:toWorld(E:toLocal(Pos)+vec(-3,-15,5)*Size),vec(0.05,0.05,3.15)*Size)
holoModel(38,"hq_cylinder")
holoMaterial(38,"models/props_canal/canal_bridge_railing_01b")
holoColor(38,vec(120,120,120))
#holoAlpha(38,150)
holoAng(38,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(38,E)
E15=holoEntity(38)
#}

#if(holoCanCreate()){
holoCreate(39,E:toWorld(E:toLocal(Pos)+vec(-3,-15.5,5)*Size),vec(0.025,3.15,0.25)*Size)
holoModel(39,"prism")
holoMaterial(39,"models/props_canal/canal_bridge_railing_01b")
holoColor(39,vec(120,120,120))
#holoAlpha(39,150)
holoAng(39,E:toWorld(E:toLocal(Ang)+ang(-12,0,90)))
holoParent(39,E15)
#}

#right
#if(holoCanCreate()){
holoCreate(7,E:toWorld(E:toLocal(Pos)+vec(-3,15,5)*Size),vec(0.5,0.5,3)*Size)
holoModel(7,"hq_rcylinder")
holoMaterial(7,Material)
holoColor(7,Color)
holoAng(7,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(7,E)
#}

#if(holoCanCreate()){
holoCreate(40,E:toWorld(E:toLocal(Pos)+vec(-3,15,5)*Size),vec(0.4,0.4,3.1)*Size)
holoModel(40,"hq_tube_thin")
holoMaterial(40,Material)
holoColor(40,Color)
holoAng(40,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(40,E)
#}

#if(holoCanCreate()){
holoCreate(41,E:toWorld(E:toLocal(Pos)+vec(-3,15,5)*Size),vec(0.4,0.4,3.05)*Size)
holoModel(41,"hq_rcylinder_thin")
holoMaterial(41,"bull/various/speedometer")
holoColor(41,Color)
holoAng(41,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(41,E)
#}

#if(holoCanCreate()){
holoCreate(42,E:toWorld(E:toLocal(Pos)+vec(-3,15,5)*Size),vec(0.4,0.4,3.07)*Size)
holoModel(42,"hq_rcylinder_thin")
holoMaterial(42,"models/props_canal/canal_bridge_railing_01b")
#holoColor(42,Color)
holoAlpha(42,150)
holoAng(42,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(42,E)
E8=holoEntity(42) 
#}

#if(holoCanCreate()){
holoCreate(43,E:toWorld(E:toLocal(Pos)+vec(-6.915,15,22.85)*Size),vec(0.37,0.37,0.15)*Size)
holoModel(43,"hq_dome")
holoMaterial(43,GlassMaterial)
holoColor(43,Color)
holoAlpha(43,100)
holoAng(43,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(43,E)
#} 

#if(holoCanCreate()){
holoCreate(44,E:toWorld(E:toLocal(Pos)+vec(-3,15,5)*Size),vec(0.05,0.05,3.15)*Size)
holoModel(44,"hq_cylinder")
holoMaterial(44,"models/props_canal/canal_bridge_railing_01b")
holoColor(44,vec(120,120,120))
#holoAlpha(44,150)
holoAng(44,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(44,E)
E18=holoEntity(44) 
#}

#if(holoCanCreate()){
holoCreate(45,E:toWorld(E:toLocal(Pos)+vec(-3,14.5,5)*Size),vec(0.025,3.15,0.25)*Size)
holoModel(45,"prism")
holoMaterial(45,"models/props_canal/canal_bridge_railing_01b")
holoColor(45,vec(120,120,120))
#holoAlpha(45,150)
holoAng(45,E:toWorld(E:toLocal(Ang)+ang(-12,0,90)))
holoParent(45,E18)
#}

#bottom inside gauges
#left
#if(holoCanCreate()){
holoCreate(8,E:toWorld(E:toLocal(Pos)+vec(-3,-3,5)*Size),vec(0.5,0.5,3)*Size)
holoModel(8,"hq_rcylinder")
holoMaterial(8,Material)
holoColor(8,Color)
holoAng(8,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(8,E)
#}

#if(holoCanCreate()){
holoCreate(46,E:toWorld(E:toLocal(Pos)+vec(-3,-3,5)*Size),vec(0.4,0.4,3.1)*Size)
holoModel(46,"hq_tube_thin")
holoMaterial(46,Material)
holoColor(46,Color)
holoAng(46,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(46,E)
#}

#if(holoCanCreate()){
holoCreate(47,E:toWorld(E:toLocal(Pos)+vec(-3,-3,5)*Size),vec(0.4,0.4,3.05)*Size)
holoModel(47,"hq_rcylinder_thin")
holoMaterial(47,"bull/various/speedometer")
holoColor(47,Color)
holoAng(47,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(47,E)
#}

#if(holoCanCreate()){
holoCreate(48,E:toWorld(E:toLocal(Pos)+vec(-3,-3,5)*Size),vec(0.4,0.4,3.07)*Size)
holoModel(48,"hq_rcylinder_thin")
holoMaterial(48,"models/props_canal/canal_bridge_railing_01b")
#holoColor(48,Color)
holoAlpha(48,150)
holoAng(48,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(48,E)
E6=holoEntity(48) 
#}

#if(holoCanCreate()){
holoCreate(49,E:toWorld(E:toLocal(Pos)+vec(-6.915,-3,22.85)*Size),vec(0.37,0.37,0.15)*Size)
holoModel(49,"hq_dome")
holoMaterial(49,GlassMaterial)
holoColor(49,Color)
holoAlpha(49,100)
holoAng(49,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(49,E)
#}

#if(holoCanCreate()){
holoCreate(50,E:toWorld(E:toLocal(Pos)+vec(-3,-3,5)*Size),vec(0.05,0.05,3.15)*Size)
holoModel(50,"hq_cylinder")
holoMaterial(50,"models/props_canal/canal_bridge_railing_01b")
holoColor(50,vec(120,120,120))
#holoAlpha(50,150)
holoAng(50,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(50,E)
E16=holoEntity(50) 
#}

#if(holoCanCreate()){
holoCreate(51,E:toWorld(E:toLocal(Pos)+vec(-3,-3.5,5)*Size),vec(0.025,3.15,0.25)*Size)
holoModel(51,"prism")
holoMaterial(51,"models/props_canal/canal_bridge_railing_01b")
holoColor(51,vec(120,120,120))
#holoAlpha(51,150)
holoAng(51,E:toWorld(E:toLocal(Ang)+ang(-12,0,90)))
holoParent(51,E16)
#}

#right
#if(holoCanCreate()){
holoCreate(9,E:toWorld(E:toLocal(Pos)+vec(-6,3,20)*Size),vec(0.5,0.5,0.5)*Size)
holoModel(9,"hq_rcylinder")
holoMaterial(9,Material)
holoColor(9,Color)
holoAng(9,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(9,E)
#}

#if(holoCanCreate()){
holoCreate(52,E:toWorld(E:toLocal(Pos)+vec(-3,3,5)*Size),vec(0.4,0.4,3.1)*Size)
holoModel(52,"hq_tube_thin")
holoMaterial(52,Material)
holoColor(52,Color)
holoAng(52,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(52,E)
#}

#if(holoCanCreate()){
holoCreate(53,E:toWorld(E:toLocal(Pos)+vec(-3,3,5)*Size),vec(0.4,0.4,3.05)*Size)
holoModel(53,"hq_rcylinder_thin")
holoMaterial(53,"bull/various/speedometer")
holoColor(53,Color)
holoAng(53,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(53,E)
#} 

#if(holoCanCreate()){
holoCreate(54,E:toWorld(E:toLocal(Pos)+vec(-3,3,5)*Size),vec(0.4,0.4,3.07)*Size)
holoModel(54,"hq_rcylinder_thin")
holoMaterial(54,"models/props_canal/canal_bridge_railing_01b")
#holoColor(54,Color)
holoAlpha(54,150)
holoAng(54,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(54,E)
E7=holoEntity(54) 
#}

#if(holoCanCreate()){
holoCreate(55,E:toWorld(E:toLocal(Pos)+vec(-6.915,3,22.85)*Size),vec(0.37,0.37,0.15)*Size)
holoModel(55,"hq_dome")
holoMaterial(55,GlassMaterial)
holoColor(55,Color)
holoAlpha(55,100)
holoAng(55,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(55,E)
#}

#if(holoCanCreate()){
holoCreate(56,E:toWorld(E:toLocal(Pos)+vec(-3,3,5)*Size),vec(0.05,0.05,3.15)*Size)
holoModel(56,"hq_cylinder")
holoMaterial(56,"models/props_canal/canal_bridge_railing_01b")
holoColor(56,vec(120,120,120))
#holoAlpha(56,150)
holoAng(56,E:toWorld(E:toLocal(Ang)+ang(-12,0,0)))
holoParent(56,E)
E17=holoEntity(56) 
#}

#if(holoCanCreate()){
holoCreate(57,E:toWorld(E:toLocal(Pos)+vec(-3,2.5,5)*Size),vec(0.025,3.15,0.25)*Size)
holoModel(57,"prism")
holoMaterial(57,"models/props_canal/canal_bridge_railing_01b")
holoColor(57,vec(120,120,120))
#holoAlpha(57,150)
holoAng(57,E:toWorld(E:toLocal(Ang)+ang(-12,0,90)))
holoParent(57,E17)
#}

#steering wheel
#if(holoCanCreate()){
holoCreate(58,E:toWorld(E:toLocal(Pos)+vec(-5,-9,22)*Size),vec(0.2,0.2,1.5)*Size)
holoModel(58,"hq_cylinder")
holoMaterial(58,Material)
holoColor(58,vec(120,120,120))
holoAng(58,E:toWorld(E:toLocal(Ang)+ang(-20,0,0)))
holoParent(58,E)
#}

Steeringwheelang = holoEntity(58):angles()
Steeringwheelpos = holoEntity(58):pos()
Steeringwheelent = holoEntity(58)


#if(holoCanCreate()){
holoCreate(65,E:toWorld(E:toLocal(Steeringwheelpos+Steeringwheelent:up()*8.2*Steeringwheelsize)),vec(0.175,0.175,0.2)*Steeringwheelsize)
holoModel(65,"hq_rcylinder_thick")
holoMaterial(65,Material)
holoColor(65,vec(192,192,192))
holoAng(65,E:toWorld(E:toLocal(Steeringwheelang)+ang(0,0,0)))
holoParent(65,E)
E9=holoEntity(65)
#}


#if(holoCanCreate()){
holoCreate(59,E:toWorld(E:toLocal(Steeringwheelpos+(Steeringwheelent:up()*9.65+Steeringwheelent:forward()*2.825)*Steeringwheelsize)),vec(0.03,0.03,0.30)*Steeringwheelsize)
holoModel(59,"hq_cylinder")
holoMaterial(59,Material)
holoColor(59,vec(120,120,120))
holoAng(59,E:toWorld(E:toLocal(Steeringwheelang+ang(60,0,0))))
holoParent(59,E9)
#}

#if(holoCanCreate()){
holoCreate(60,E:toWorld(E:toLocal(Steeringwheelpos+(Steeringwheelent:up()*9.65+Steeringwheelent:forward()*-1.5+Steeringwheelent:right()*-2.3)*Steeringwheelsize)),vec(0.03,0.03,0.30)*Steeringwheelsize)
holoModel(60,"hq_cylinder")
holoMaterial(60,Material)
holoColor(60,vec(120,120,120))
holoAng(60,E:toWorld(E:toLocal(Steeringwheelang+ang(-45,0,-45))))
holoParent(60,E9)
#}

#if(holoCanCreate()){
holoCreate(61,E:toWorld(E:toLocal(Steeringwheelpos+(Steeringwheelent:up()*9.65+Steeringwheelent:forward()*-1.5+Steeringwheelent:right()*2.3)*Steeringwheelsize)),vec(0.03,0.03,0.3)*Steeringwheelsize)
holoModel(61,"hq_cylinder")
holoMaterial(61,Material)
holoColor(61,vec(120,120,120))
holoAng(61,E:toWorld(E:toLocal(Steeringwheelang)+ang(-45,0,45)))
holoParent(61,E9)
#}


#if(holoCanCreate()){
holoCreate(62,E:toWorld(E:toLocal(Steeringwheelpos+Steeringwheelent:up()*10.5*Steeringwheelsize)),vec(0.75,0.75,0.75)*Steeringwheelsize)
holoModel(62,"hq_torus_thin")
holoMaterial(62,Material)
holoColor(62,vec(120,120,120))
holoAng(62,E:toWorld(E:toLocal(Steeringwheelang)+ang(0,0,0)))
holoParent(62,E9)
#}

#if(holoCanCreate()){
holoCreate(63,E:toWorld(E:toLocal(Steeringwheelpos+Steeringwheelent:up()*9.2*Steeringwheelsize)),vec(0.35,0.35,0.35)*Steeringwheelsize)
holoModel(63,"hq_torus_thin")
holoMaterial(63,Material)
holoColor(63,vec(192,192,192))
holoAng(63,E:toWorld(E:toLocal(Steeringwheelang)+ang(0,0,0)))
holoParent(63,E9)
#}

#if(holoCanCreate()){
holoCreate(64,E:toWorld(E:toLocal(Steeringwheelpos+Steeringwheelent:up()*8.7*Steeringwheelsize)),vec(0.25,0.25,0.45)*Steeringwheelsize)
holoModel(64,"hq_torus_thick")
holoMaterial(64,Material)
holoColor(64,vec(120,120,120))
holoAng(64,E:toWorld(E:toLocal(Steeringwheelang)+ang(0,0,0)))
holoParent(64,E9)
#}

holoPos(65,E:toWorld(E:toLocal(Steeringwheelpos+Steeringwheelent:up()*8.2*Size)))
}


