@name DIRTY SETANG STEERING SLAVE
@inputs A D CHASSIS:entity
@persist SLAVE:entity [TURN_RATE TURN_RATE2 TURN_ANGLE TURN] 
@persist ANGVEL1 ANGVEL2 ANGVEL3 AngArr:array
@persist VELVEC1 VELVEC2 VELVEC3 VelArr:array
@outputs VELVEC
@model models/sprops/geometry/sphere_12.mdl

#This has no way to detect the chassis orentation so make sure you set it manually. 
#Also checking angular velocity sometimes misbehaves on some chassis and might need to be disabled. This is there to keep the chassis from rotating too fast making slides easier to manage.



if (first()|dupefinished())    {
    #interval(30)
    interval(1)

    
    TURN_RATE = 2
    TURN_RATE2 = 8
    TURN_ANGLE = 35

    
    SLAVE = entity()
} elseif (clk())    {
    interval(30)
    
#Leverage=(1/CHASSIS:inertia():length()+1)*0.1
Leverage=(((1+CHASSIS:inertia():length())/1)-1)*0.1

POS=CHASSIS:pos()


ANGVEL2=ANGVEL1
ANGVEL3=ANGVEL2
ANGVEL1=(CHASSIS:angVel()*1):yaw()                  #change between pitch, yaw, roll depending on chassis orentation. You may have to invert with a - infront of the brackets.
AngArr= array(ANGVEL1,ANGVEL1,ANGVEL1)
ANGVEL=AngArr:average()


#ANGVELVEC=(CHASSIS:angVelVector()*1)


#VELVEC = (1/(CHASSIS:vel():y()+1))
#VELVEC = (CHASSIS:toLocal(CHASSIS:toWorld(CHASSIS:vel())):y())*0.05

VELVEC2=VELVEC1
VELVEC3=VELVEC2
VELVEC1 = -(CHASSIS:toLocal(CHASSIS:vel()+POS):y())         #change between x(), y(), z() depending on chassis orentation. You may have to invert with a - infront of the brackets.
VelArr= array(VELVEC1,VELVEC2,VELVEC3)
VELVEC=VelArr:average()

COMP=clamp(VELVEC/75,-50,50)-clamp(abs(ANGVEL)*ANGVEL/400,-25,25)




    if (!SLAVE:isPlayerHolding())    {
        if(A|D){
        TURN += clamp(((A-D)*TURN_ANGLE - TURN)/2, -TURN_RATE, TURN_RATE)
         }
        else{TURN += clamp(((A-D)*TURN_ANGLE - TURN)/2, -90, 90)}
        SLAVE:setAng( CHASSIS:toWorld(ang(-0, TURN+COMP, 5)) )
        if(!entity():isFrozen()){
        SLAVE:propFreeze(1)
        }
    }
}



